@import '../../../styles/variables';

header {
  width: 95%;
  margin: 0 auto;
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  height: 70px;
  display: flex;
  align-items: center;
  justify-content: space-between;
  z-index: 1000;
  color: var(--color-text);
  transition: background $transition, backdrop-filter $transition;

  // üëá Blur + gradiente quando scrolli
  &.scrolled {
    backdrop-filter: blur(12px); // sfocatura consistente
    background: linear-gradient(
      to right,
      rgba(0, 0, 0, 0) 0%,        // estremit√† trasparenti
      rgba(0, 0, 0, 0.35) 5%,     // inizia presto ma tenue
      rgba(0, 0, 0, 0.6) 25%,     // pieno gi√† sotto il logo
      rgba(0, 0, 0, 0.6) 75%,     // resta pieno fino allo switch
      rgba(0, 0, 0, 0.35) 95%,    // sfuma solo vicino ai bordi
      rgba(0, 0, 0, 0) 100%       // trasparente agli estremi
    );
  
    // maschera pi√π estesa
    mask-image: linear-gradient(
      to right,
      rgba(0, 0, 0, 0) 0%,
      rgba(0, 0, 0, 1) 5%,        // entra subito
      rgba(0, 0, 0, 1) 95%,       // tiene pieno quasi tutto
      rgba(0, 0, 0, 0) 100%       // dissolve solo in prossimit√† fine header
    );
    -webkit-mask-image: linear-gradient(
      to right,
      rgba(0, 0, 0, 0) 0%,
      rgba(0, 0, 0, 1) 5%,
      rgba(0, 0, 0, 1) 95%,
      rgba(0, 0, 0, 0) 100%
    );
    -webkit-mask-composite: destination-in;
    mask-composite: intersect;
    transition: background $transition, backdrop-filter $transition;
  }
  

  // üëá Background uniforme quando burger √® aperto
  &.burger-open {
    backdrop-filter: none;
    background: rgba(0, 0, 0, 0.9); 
    transition: background $transition;
  }

  .left {
    display: flex;
    align-items: center;
    gap: 1rem;
  }

  .logo {
    position: fixed;
    height: 120px;
  }

  .nav-links {
    display: flex;
    gap: 2rem;

    a {
      font-size: 1rem;
      font-weight: 500;
      color: #fff;
      text-transform: uppercase;
      letter-spacing: 1px;
      padding-bottom: 6px;
      position: relative;
      transition: color $transition;

      &::after {
        content: '';
        position: absolute;
        left: 0;
        bottom: -23px;
        width: 0;
        height: 3px;
        background: var(--accent-secondary);
        transition: width $transition;
      }

      &:hover::after,
      &.active::after {
        width: 100%;
      }

      &:hover,
      &.active {
        color: var(--accent-secondary);
      }
    }
  }

  .actions {
    display: flex;
    align-items: center;
    gap: 1rem;
  }

  .burger {
    display: none;
    background: transparent;
    border: none;
    font-size: 3rem;
    color: var(--color-text);
    cursor: pointer;
  }
}

// üîç Search
.search-container {
  position: fixed;
  top: 22px;
  right: 100px;

  input {
    position: absolute;
    right: 40px;
    top: 50%;
    transform: translateY(-50%);
    width: 0;
    opacity: 0;
    padding: 6px 10px;
    border-radius: $radius;
    border: 1px solid var(--accent-primary);
    background: var(--color-search);
    color: var(--color-text);
    font-size: 0.9rem;
    transition: width $transition, opacity $transition, border $transition;

    &::placeholder {
      color: var(--color-muted);
    }

    &:focus {
      border-color: var(--accent-primary);
      box-shadow: 0 0 6px rgba(255, 152, 0, 0.6);
      outline: none;
    }
  }

  &.open input {
    width: 180px;
    opacity: 1;
  }

  .search-btn {
    background: transparent;
    border: none;
    cursor: pointer;
    display: flex;
    align-items: center;
    justify-content: center;
    transition: color $transition;

    .icon {
      width: 22px;
      height: 22px;
      stroke: currentColor;
      color: white;
      margin-right: 10px;
    }

    &:hover {
      color: var(--accent-primary);
    }
  }
}

// üåô/‚òÄÔ∏è Switch fisso
.theme-toggle-fixed {
  position: fixed;
  top: 20px;
  right: 3rem;
  z-index: 1500;
  cursor: pointer;

  .switch {
    width: 50px;
    height: 26px;
    border-radius: 50px;
    background: rgba(255, 255, 255, 0.1);
    border: 1px solid rgba(255, 255, 255, 0.3);
    backdrop-filter: blur(4px);
    position: relative;
    transition: background $transition, border $transition;

    .thumb {
      width: 22px;
      height: 22px;
      border-radius: 50%;
      background: var(--color-surface);
      box-shadow: 0 0 6px rgba(0, 0, 0, 0.4);
      position: absolute;
      top: 1px;
      left: 1px;
      transition: transform $transition, background $transition,
        box-shadow $transition;
    }

    &.active {
      background: rgba(213, 0, 0, 0.2);
      border: 1px solid var(--accent-primary);

      .thumb {
        transform: translateX(24px);
        background: var(--accent-primary);
        box-shadow: var(--accent-shadow)-up;
      }
    }
  }
}

// linea sotto header
.header-line {
  width: 95%;
  margin: 0 auto;
  position: fixed;
  left: 0;
  right: 0;
  height: 3px;
  background: rgba(255, 255, 255, 0.3);
  z-index: 1200;
  top: 70px;
  transition: top $transition;

  &.open {
    top: 254px; // scende insieme al menu burger
  }
}

// Burger menu
.burger-menu {
  display: flex;
  flex-direction: column;
  max-height: 0;
  pointer-events: none;
  overflow: hidden;
  position: fixed;
  top: 70px;
  left: 0;
  right: 0;
  padding: 1rem 2rem;
  gap: 1rem;
  z-index: 1400;
  width: 95%;
  margin: 0 auto;
  background: rgba(0, 0, 0, 0.9); 
  opacity: 0;
  transform: translateY(-8px);
  transition: opacity $transition, transform $transition, max-height $transition, padding $transition; 

  &.open {
    max-height: 400px;    // o il valore che ti sta dentro i link
    opacity: 1;
    transform: translateY(0);
    pointer-events: auto;
    padding-top: 1rem;    // ripristino padding in apertura
    padding-bottom: 1rem; // (stesso valore che avevi gi√†)
    opacity: 1;
    transform: translateY(0);
    transition: opacity $transition, transform $transition;
  }

  a {
    font-size: 1.1rem;
    text-transform: uppercase;
    font-weight: 500;
    opacity: 0;
    transform: translateY(-4px);
    transition: opacity $transition, transform $transition, color $transition;
  }
    &.open a {
      opacity: 1;
      transform: translateY(0);
    }
    &.open a:nth-child(1) { transition-delay: 0.05s; }
    &.open a:nth-child(2) { transition-delay: 0.10s; }
    &.open a:nth-child(3) { transition-delay: 0.15s; }
    &.open a:nth-child(4) { transition-delay: 0.20s; }
}

@media (max-width: 991px) {
  header {
    padding: 0 1rem;

    .nav-links {
      display: none;
    }

    .burger {
      display: block;
    }
  }
}